apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

Properties localProperties = new Properties()
localProperties.load(rootProject.file('local.properties').newDataInputStream())

def LOCAL_PROPERTIES = { key -> "${localProperties.get(key)}"}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "xyz.laziness.dailycommit"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.00"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "GITHUB_APP_ID", LOCAL_PROPERTIES("github_app_id"))
        buildConfigField("String", "GITHUB_APP_SECRET", LOCAL_PROPERTIES("github_app_secret"))
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    supportLibraryVersion = '27.1.1'
    daggerVersion = '2.11'
    fireBaseVersion = '15.0.0'
    rxjava2Version = '2.0.6'
    rxandroidVersion = '2.0.2'
    glideVersion = '3.8.0'
    glideTransformationsVersion = '2.0.2'
    rx2FastAndroidNetworkingVersion = '1.0.1'
    roomDatabaseVersion = '1.1.1'
}

configurations {
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains' , module:'annotations'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
    implementation "com.android.support:preference-v7:${supportLibraryVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Dependency Injection
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // FireBase
    implementation "com.google.firebase:firebase-core:${fireBaseVersion}"
    implementation "com.google.firebase:firebase-auth:${fireBaseVersion}"

    // Reactive
    implementation "io.reactivex.rxjava2:rxjava:${rxjava2Version}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${glideVersion}"

    // Images
    implementation 'com.caverock:androidsvg:1.2.1'
    implementation "jp.wasabeef:glide-transformations:${glideTransformationsVersion}"

    // Network
    implementation "com.amitshekhar.android:rx2-android-networking:${rx2FastAndroidNetworkingVersion}"

    // Jsoup
    implementation 'org.jsoup:jsoup:1.10.3'
    implementation 'com.github.florent37:rxjsoup:1.0.4'

    // RoomDatabase
    implementation "android.arch.persistence.room:runtime:${roomDatabaseVersion}"
    implementation "android.arch.persistence.room:rxjava2:${roomDatabaseVersion}"
    kapt "android.arch.persistence.room:compiler:${roomDatabaseVersion}"
}

apply plugin: 'com.google.gms.google-services'
